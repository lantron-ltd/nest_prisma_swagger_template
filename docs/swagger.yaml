openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      summary: ''
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: &ref_0
        - app
  /v1/hello:
    get:
      operationId: AppController_getHelloV1
      summary: ''
      description: http://localhost:3000/v1
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_0
  /v2/hello:
    get:
      operationId: AppController_getHelloV2
      summary: ''
      description: |-
        http://localhost:3000/v2
        1. 默认会返回一个 nest=true 的 cookie
        2. 在postman中的Headers中设置一个key为[Cookie],[value]为[name=nest]的参数，会在控制台打印出来
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_0
  /axios:
    get:
      operationId: AppController_getFromAxios
      summary: ''
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_0
  /session:
    get:
      operationId: AppController_session
      summary: ''
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags: *ref_0
  /sse:
    get:
      operationId: AppController_sse
      summary: ''
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_0
  /chat:
    get:
      operationId: ChatController_Home
      summary: ''
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags: &ref_1
        - chat
  /chat/api/chat:
    get:
      operationId: ChatController_Chat
      summary: ''
      description: 供chat.ejs中的ajax请求调用;
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_1
  /posts:
    post:
      operationId: PostsController_create
      summary: ''
      description: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posts'
      tags: &ref_2
        - posts
    get:
      operationId: PostsController_findAll
      summary: ''
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Posts'
      tags: *ref_2
  /posts/drafts:
    get:
      operationId: PostsController_findDrafts
      summary: ''
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Posts'
      tags: *ref_2
  /posts/{id}:
    get:
      operationId: PostsController_findOne
      summary: ''
      description: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posts'
      tags: *ref_2
    patch:
      operationId: PostsController_update
      summary: ''
      description: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePostDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posts'
      tags: *ref_2
    delete:
      operationId: PostsController_remove
      summary: ''
      description: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posts'
      tags: *ref_2
  /auth/register:
    post:
      operationId: AuthController_register
      summary: ''
      description: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags: &ref_3
        - auth
      security: &ref_4
        - bearer: []
  /auth/login:
    post:
      operationId: AuthController_login
      summary: ''
      description: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
      tags: *ref_3
      security: *ref_4
  /auth/profile:
    get:
      operationId: AuthController_getProfile
      summary: ''
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntity'
      tags: *ref_3
      security: *ref_4
  /auth/updatePassword:
    post:
      operationId: AuthController_updatePassword
      summary: ''
      description: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordInput'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags: *ref_3
      security: *ref_4
  /auth/google/login:
    get:
      operationId: AuthController_googleAuth
      summary: ''
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_3
      security: *ref_4
  /auth/google/callback:
    get:
      operationId: AuthController_googleAuthRedirect
      summary: ''
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
      tags: *ref_3
      security: *ref_4
  /mail/sendMail:
    get:
      operationId: MailController_sendMail
      summary: ''
      description: ''
      parameters:
        - name: mail
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - mail
  /queue/transcode:
    post:
      operationId: QueueController_transcode
      summary: ''
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - queue
  /order:
    post:
      operationId: OrdersController_create
      summary: ''
      description: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderDto'
      responses:
        '200':
          description: Create order
        '201':
          description: ''
      tags:
        - order
  /file/upload:
    post:
      operationId: FileController_uploadFile
      summary: ''
      description: ''
      parameters: []
      requestBody:
        required: true
        description: List of files
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadDto'
      responses:
        '200':
          description: ''
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags: &ref_5
        - file
  /file/uploads:
    post:
      operationId: FileController_uploadFiles
      summary: ''
      description: ''
      parameters: []
      requestBody:
        required: true
        description: List of files
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FilesUploadDto'
      responses:
        '201':
          description: ''
      tags: *ref_5
  /file/download:
    get:
      operationId: FileController_downloadFile
      summary: ''
      description: ''
      parameters:
        - name: path
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_5
  /health:
    get:
      operationId: HealthController_check
      summary: ''
      description: ''
      parameters: []
      responses:
        '200':
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example: &ref_6
                      database: &ref_7
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example: *ref_6
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
        '503':
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example: *ref_6
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example:
                      redis: &ref_8
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example:
                      database: *ref_7
                      redis: *ref_8
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
info:
  title: nest-api
  description: The nest API description
  version: '0.1'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    basic:
      type: http
      scheme: basic
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    CreatePostDto:
      type: object
      properties:
        description:
          type: string
        published:
          type: boolean
          default: false
        title:
          type: string
        body:
          type: string
        authorId:
          type: number
        content:
          type: string
          nullable: true
      required:
        - title
        - body
        - authorId
        - content
    Posts:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
          nullable: true
        body:
          type: string
        authorId:
          type: number
        content:
          type: string
          nullable: true
        published:
          type: boolean
        id:
          type: number
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
        - title
        - description
        - body
        - authorId
        - content
        - published
        - id
        - createdAt
        - updatedAt
    UpdatePostDto:
      type: object
      properties:
        description:
          type: string
        published:
          type: boolean
          default: false
        title:
          type: string
        body:
          type: string
        authorId:
          type: number
        content:
          type: string
          nullable: true
    RegisterInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    LoginInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
      required:
        - accessToken
    UserEntity:
      type: object
      properties:
        id:
          type: number
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
        - id
        - createdAt
        - updatedAt
    UpdatePasswordInput:
      type: object
      properties: {}
    CreateOrderDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
        - description
    FileUploadDto:
      type: object
      properties:
        file:
          type: string
          format: binary
      required:
        - file
    FilesUploadDto:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
            format: binary
      required:
        - files
